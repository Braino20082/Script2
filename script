-- Client GUI + Status für Brainrot (StarterPlayerScripts)
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")

-- === GUI erstellen ===
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BrainrotGUI"
screenGui.Parent = PlayerGui
screenGui.ResetOnSpawn = false

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 250, 0, 60)
frame.Position = UDim2.new(0.5, -125, 0.05, 0)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
frame.BorderSizePixel = 0
frame.BackgroundTransparency = 0.1
frame.Parent = screenGui
frame.AnchorPoint = Vector2.new(0.5, 0)

-- Icon
local icon = Instance.new("ImageLabel")
icon.Size = UDim2.new(0, 40, 0, 40)
icon.Position = UDim2.new(0, 10, 0.5, -20)
icon.BackgroundTransparency = 1
icon.Image = "rbxassetid://12846818277" -- Beispiel lila Brainrot Icon (angepasst)
icon.Parent = frame

-- Text
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -60, 0.5, -5)
title.Position = UDim2.new(0, 55, 0, 5)
title.Text = "Brainrot Status"
title.TextScaled = true
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.BackgroundTransparency = 1
title.Font = Enum.Font.SourceSansBold
title.Parent = frame

-- Status Label
local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1, -60, 0.5, -5)
statusLabel.Position = UDim2.new(0, 55, 0.5, 0)
statusLabel.Text = "Bereit"
statusLabel.TextScaled = true
statusLabel.TextColor3 = Color3.fromRGB(200, 200, 255)
statusLabel.BackgroundTransparency = 1
statusLabel.Font = Enum.Font.SourceSansBold
statusLabel.Parent = frame

-- Funktion, um Status zu ändern
local function setStatus(text, color)
    statusLabel.Text = text
    if color then
        statusLabel.TextColor3 = color
    end
end

-- Verbindung zum Server-Script (RemoteEvent optional, falls du Effekte willst)
-- Alternativ: wenn das Server-Script berührt-Events selbst behandelt, kannst du
-- hier nur GUI Feedback machen. Wir patchen es auf Touched Events:
local Workspace = game:GetService("Workspace")
local CollectionService = game:GetService("CollectionService")

-- Brainrot berührt → Status ändern
local function monitorBrainrot(brainrot)
    if not brainrot:IsA("BasePart") then return end
    brainrot.Touched:Connect(function(hit)
        local char = hit.Parent
        if char and char:FindFirstChild("Humanoid") then
            local plr = Players:GetPlayerFromCharacter(char)
            if plr == player then
                -- Spieler hat Brainrot berührt
                setStatus("Stehlen...", Color3.fromRGB(255, 200, 50))
                wait(0.3)
                setStatus("Geflogen!", Color3.fromRGB(50, 255, 50))
                wait(2)
                setStatus("Bereit", Color3.fromRGB(200, 200, 255))
            end
        end
    end)
end

-- Alle vorhandenen Brainrot überwachen
for _, obj in ipairs(Workspace:GetDescendants()) do
    if obj.Name == "Brainrot" then
        monitorBrainrot(obj)
    end
end

-- Neue Brainrot automatisch überwachen
Workspace.DescendantAdded:Connect(function(obj)
    if obj.Name == "Brainrot" then
        monitorBrainrot(obj)
    end
end)
