-- SERVER SCRIPT - F√ºge dieses Script in ServerScriptService ein
-- Dieses Script l√§uft auf dem Server und verwaltet die Tools

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ServerStorage = game:GetService("ServerStorage")
local Lighting = game:GetService("Lighting")
local Workspace = game:GetService("Workspace")

-- Remote Events erstellen f√ºr Client-Server Kommunikation
local remoteEvents = Instance.new("Folder")
remoteEvents.Name = "ToolGiverRemotes"
remoteEvents.Parent = ReplicatedStorage

local getToolsRemote = Instance.new("RemoteFunction")
getToolsRemote.Name = "GetToolsRemote"
getToolsRemote.Parent = remoteEvents

local giveToolRemote = Instance.new("RemoteEvent")
giveToolRemote.Name = "GiveToolRemote"
giveToolRemote.Parent = remoteEvents

-- Server-seitige Tool-Datenbank
local serverTools = {}

-- Funktion zum Scannen aller Tools auf dem Server
local function scanServerTools()
    serverTools = {}
    
    local function findToolsInContainer(container, containerName)
        local function searchRecursive(obj)
            if obj:IsA("Tool") then
                table.insert(serverTools, {
                    name = obj.Name,
                    path = containerName,
                    originalTool = obj
                })
            end
            
            for _, child in pairs(obj:GetChildren()) do
                searchRecursive(child)
            end
        end
        
        pcall(function()
            searchRecursive(container)
        end)
    end
    
    -- Scanne Server-Container
    findToolsInContainer(ServerStorage, "ServerStorage")
    findToolsInContainer(ReplicatedStorage, "ReplicatedStorage")
    findToolsInContainer(Lighting, "Lighting")
    findToolsInContainer(Workspace, "Workspace")
    
    -- Entferne Duplikate
    local uniqueTools = {}
    local seen = {}
    
    for _, toolData in pairs(serverTools) do
        local key = toolData.name .. "|" .. toolData.path
        if not seen[key] then
            seen[key] = true
            table.insert(uniqueTools, toolData)
        end
    end
    
    serverTools = uniqueTools
    
    -- Sortiere Tools
    table.sort(serverTools, function(a, b)
        return a.name < b.name
    end)
    
    print("Server gescannt: " .. #serverTools .. " Tools gefunden")
end

-- Remote Function Handler - sendet Tool-Liste an Client
getToolsRemote.OnServerInvoke = function(player)
    scanServerTools() -- Scanne bei jeder Anfrage neu
    
    local toolList = {}
    for _, toolData in pairs(serverTools) do
        table.insert(toolList, {
            name = toolData.name,
            path = toolData.path
        })
    end
    
    return toolList
end

-- Remote Event Handler - gibt Tool an Spieler
giveToolRemote.OnServerEvent:Connect(function(player, toolName)
    -- Finde das Tool in der Server-Datenbank
    local toolToGive = nil
    
    for _, toolData in pairs(serverTools) do
        if toolData.name == toolName then
            toolToGive = toolData.originalTool
            break
        end
    end
    
    if toolToGive and toolToGive.Parent then
        -- Clone das Tool und gib es dem Spieler
        local clonedTool = toolToGive:Clone()
        clonedTool.Parent = player.Backpack
        
        print(player.Name .. " hat Tool erhalten: " .. toolName)
    else
        warn("Tool nicht gefunden: " .. toolName)
    end
end)

-- Scanne Tools beim Start
scanServerTools()

print("Tool Giver Server geladen!")

--[[
CLIENT SCRIPT - F√ºge dieses Script in StarterPlayer > StarterPlayerScripts ein
Dieses Script l√§uft bei jedem Spieler und erstellt die GUI
]]

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Warte auf Remote Events
local remoteEvents = ReplicatedStorage:WaitForChild("ToolGiverRemotes")
local getToolsRemote = remoteEvents:WaitForChild("GetToolsRemote")
local giveToolRemote = remoteEvents:WaitForChild("GiveToolRemote")

-- GUI Erstellung
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ToolGiverGUI"
screenGui.Parent = playerGui
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

-- Hauptframe
local mainFrame = Instance.new("Frame")
mainFrame.Name = "MainFrame"
mainFrame.Size = UDim2.new(0, 450, 0, 550)
mainFrame.Position = UDim2.new(0.5, -225, 0.5, -275)
mainFrame.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = screenGui

-- Abgerundete Ecken
local mainCorner = Instance.new("UICorner")
mainCorner.CornerRadius = UDim.new(0, 15)
mainCorner.Parent = mainFrame

-- Schatten
local shadow = Instance.new("Frame")
shadow.Name = "Shadow"
shadow.Size = UDim2.new(1, 6, 1, 6)
shadow.Position = UDim2.new(0, -3, 0, 3)
shadow.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
shadow.BackgroundTransparency = 0.7
shadow.ZIndex = mainFrame.ZIndex - 1
shadow.Parent = mainFrame

local shadowCorner = Instance.new("UICorner")
shadowCorner.CornerRadius = UDim.new(0, 15)
shadowCorner.Parent = shadow

-- Titel Bar
local titleBar = Instance.new("Frame")
titleBar.Name = "TitleBar"
titleBar.Size = UDim2.new(1, 0, 0, 60)
titleBar.BackgroundColor3 = Color3.fromRGB(65, 105, 255)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 15)
titleCorner.Parent = titleBar

local titleFix = Instance.new("Frame")
titleFix.Size = UDim2.new(1, 0, 0, 15)
titleFix.Position = UDim2.new(0, 0, 1, -15)
titleFix.BackgroundColor3 = Color3.fromRGB(65, 105, 255)
titleFix.BorderSizePixel = 0
titleFix.Parent = titleBar

-- Titel Text
local titleText = Instance.new("TextLabel")
titleText.Size = UDim2.new(1, -100, 1, 0)
titleText.Position = UDim2.new(0, 10, 0, 0)
titleText.BackgroundTransparency = 1
titleText.Text = "üåê Server Tool Giver"
titleText.TextColor3 = Color3.fromRGB(255, 255, 255)
titleText.TextScaled = true
titleText.Font = Enum.Font.GothamBold
titleText.Parent = titleBar

-- Buttons
local refreshButton = Instance.new("TextButton")
refreshButton.Size = UDim2.new(0, 40, 0, 40)
refreshButton.Position = UDim2.new(1, -95, 0, 10)
refreshButton.BackgroundColor3 = Color3.fromRGB(85, 255, 85)
refreshButton.Text = "üîÑ"
refreshButton.TextColor3 = Color3.fromRGB(255, 255, 255)
refreshButton.TextScaled = true
refreshButton.Font = Enum.Font.GothamBold
refreshButton.BorderSizePixel = 0
refreshButton.Parent = titleBar

local refreshCorner = Instance.new("UICorner")
refreshCorner.CornerRadius = UDim.new(0, 8)
refreshCorner.Parent = refreshButton

local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 40, 0, 40)
closeButton.Position = UDim2.new(1, -50, 0, 10)
closeButton.BackgroundColor3 = Color3.fromRGB(255, 85, 85)
closeButton.Text = "‚úï"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.TextScaled = true
closeButton.Font = Enum.Font.GothamBold
closeButton.BorderSizePixel = 0
closeButton.Parent = titleBar

local closeCorner = Instance.new("UICorner")
closeCorner.CornerRadius = UDim.new(0, 8)
closeCorner.Parent = closeButton

-- Status Label
local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(1, -20, 0, 25)
statusLabel.Position = UDim2.new(0, 10, 0, 65)
statusLabel.BackgroundTransparency = 1
statusLabel.Text = "Lade Server-Tools..."
statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
statusLabel.TextScaled = true
statusLabel.Font = Enum.Font.Gotham
statusLabel.Parent = mainFrame

-- Scroll Frame
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(1, -20, 1, -170)
scrollFrame.Position = UDim2.new(0, 10, 0, 95)
scrollFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
scrollFrame.BorderSizePixel = 0
scrollFrame.ScrollBarThickness = 8
scrollFrame.ScrollBarImageColor3 = Color3.fromRGB(65, 105, 255)
scrollFrame.Parent = mainFrame

local scrollCorner = Instance.new("UICorner")
scrollCorner.CornerRadius = UDim.new(0, 10)
scrollCorner.Parent = scrollFrame

-- Layout
local listLayout = Instance.new("UIListLayout")
listLayout.SortOrder = Enum.SortOrder.Name
listLayout.Padding = UDim.new(0, 5)
listLayout.Parent = scrollFrame

local listPadding = Instance.new("UIPadding")
listPadding.PaddingTop = UDim.new(0, 10)
listPadding.PaddingBottom = UDim.new(0, 10)
listPadding.PaddingLeft = UDim.new(0, 10)
listPadding.PaddingRight = UDim.new(0, 10)
listPadding.Parent = scrollFrame

-- Search Box
local searchFrame = Instance.new("Frame")
searchFrame.Size = UDim2.new(1, -20, 0, 40)
searchFrame.Position = UDim2.new(0, 10, 1, -50)
searchFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
searchFrame.BorderSizePixel = 0
searchFrame.Parent = mainFrame

local searchCorner = Instance.new("UICorner")
searchCorner.CornerRadius = UDim.new(0, 8)
searchCorner.Parent = searchFrame

local searchBox = Instance.new("TextBox")
searchBox.Size = UDim2.new(1, -20, 1, 0)
searchBox.Position = UDim2.new(0, 10, 0, 0)
searchBox.BackgroundTransparency = 1
searchBox.Text = ""
searchBox.PlaceholderText = "üîç Server-Tool suchen..."
searchBox.TextColor3 = Color3.fromRGB(255, 255, 255)
searchBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
searchBox.TextScaled = true
searchBox.Font = Enum.Font.Gotham
searchBox.Parent = searchFrame

-- Variablen
local serverTools = {}
local toolButtons = {}

-- Tool Button erstellen
local function createToolButton(toolData)
    local toolButton = Instance.new("TextButton")
    toolButton.Name = toolData.name .. "Button"
    toolButton.Size = UDim2.new(1, 0, 0, 50)
    toolButton.BackgroundColor3 = Color3.fromRGB(55, 55, 65)
    toolButton.BorderSizePixel = 0
    toolButton.Parent = scrollFrame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 8)
    buttonCorner.Parent = toolButton
    
    -- Labels
    local nameLabel = Instance.new("TextLabel")
    nameLabel.Size = UDim2.new(1, -60, 0.6, 0)
    nameLabel.Position = UDim2.new(0, 10, 0, 0)
    nameLabel.BackgroundTransparency = 1
    nameLabel.Text = "üîß " .. toolData.name
    nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    nameLabel.TextXAlignment = Enum.TextXAlignment.Left
    nameLabel.TextScaled = true
    nameLabel.Font = Enum.Font.GothamBold
    nameLabel.Parent = toolButton
    
    local pathLabel = Instance.new("TextLabel")
    pathLabel.Size = UDim2.new(1, -60, 0.4, 0)
    pathLabel.Position = UDim2.new(0, 10, 0.6, 0)
    pathLabel.BackgroundTransparency = 1
    pathLabel.Text = "üåê Server: " .. toolData.path
    pathLabel.TextColor3 = Color3.fromRGB(150, 150, 150)
    pathLabel.TextXAlignment = Enum.TextXAlignment.Left
    pathLabel.TextScaled = true
    pathLabel.Font = Enum.Font.Gotham
    pathLabel.Parent = toolButton
    
    -- Get Button
    local getButton = Instance.new("TextButton")
    getButton.Size = UDim2.new(0, 45, 0, 30)
    getButton.Position = UDim2.new(1, -55, 0.5, -15)
    getButton.BackgroundColor3 = Color3.fromRGB(65, 105, 255)
    getButton.Text = "GET"
    getButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    getButton.TextScaled = true
    getButton.Font = Enum.Font.GothamBold
    getButton.BorderSizePixel = 0
    getButton.Parent = toolButton
    
    local getCorner = Instance.new("UICorner")
    getCorner.CornerRadius = UDim.new(0, 6)
    getCorner.Parent = getButton
    
    -- Animations und Events
    local originalColor = toolButton.BackgroundColor3
    
    toolButton.MouseEnter:Connect(function()
        TweenService:Create(toolButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(65, 65, 75)}):Play()
    end)
    
    toolButton.MouseLeave:Connect(function()
        TweenService:Create(toolButton, TweenInfo.new(0.2), {BackgroundColor3 = originalColor}):Play()
    end)
    
    -- Tool anfordern
    local function requestTool()
        getButton.Text = "..."
        getButton.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
        
        -- Sende Anfrage an Server
        giveToolRemote:FireServer(toolData.name)
        
        wait(0.5)
        
        getButton.Text = "‚úì"
        getButton.BackgroundColor3 = Color3.fromRGB(85, 255, 85)
        
        wait(1)
        
        getButton.Text = "GET"
        getButton.BackgroundColor3 = Color3.fromRGB(65, 105, 255)
    end
    
    getButton.MouseButton1Click:Connect(requestTool)
    toolButton.MouseButton1Click:Connect(requestTool)
    
    return toolButton
end

-- Tools vom Server laden
local function loadServerTools()
    statusLabel.Text = "Lade Server-Tools..."
    statusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    
    -- L√∂sche alte Buttons
    for _, button in pairs(toolButtons) do
        if button and button.Parent then
            button:Destroy()
        end
    end
    toolButtons = {}
    
    -- Anfrage an Server
    local success, tools = pcall(function()
        return getToolsRemote:InvokeServer()
    end)
    
    if success and tools then
        serverTools = tools
        
        if #serverTools == 0 then
            statusLabel.Text = "‚ùå Keine Tools auf Server gefunden"
            statusLabel.TextColor3 = Color3.fromRGB(255, 85, 85)
        else
            statusLabel.Text = "‚úÖ " .. #serverTools .. " Server-Tools geladen"
            statusLabel.TextColor3 = Color3.fromRGB(85, 255, 85)
            
            -- Erstelle Buttons
            for _, toolData in pairs(serverTools) do
                toolButtons[toolData.name] = createToolButton(toolData)
            end
            
            scrollFrame.CanvasSize = UDim2.new(0, 0, 0, #serverTools * 55 + 20)
        end
    else
        statusLabel.Text = "‚ùå Fehler beim Laden der Server-Tools"
        statusLabel.TextColor3 = Color3.fromRGB(255, 85, 85)
    end
end

-- Such-Funktion
searchBox.Changed:Connect(function()
    local searchText = searchBox.Text:lower()
    local visibleCount = 0
    
    for toolName, button in pairs(toolButtons) do
        if toolName:lower():find(searchText) or searchText == "" then
            button.Visible = true
            visibleCount = visibleCount + 1
        else
            button.Visible = false
        end
    end
    
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, visibleCount * 55 + 20)
end)

-- Button Events
refreshButton.MouseButton1Click:Connect(function()
    TweenService:Create(refreshButton, TweenInfo.new(0.5), {Rotation = refreshButton.Rotation + 360}):Play()
    loadServerTools()
end)

closeButton.MouseButton1Click:Connect(function()
    local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), 
        {Size = UDim2.new(0, 0, 0, 0), Position = UDim2.new(0.5, 0, 0.5, 0)})
    tween:Play()
    tween.Completed:Connect(function()
        screenGui:Destroy()
    end)
end)

-- Dragging
local dragToggle, dragStart, startPos = nil, nil, nil

titleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragToggle = true
        dragStart = input.Position
        startPos = mainFrame.Position
        
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragToggle = false
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and dragToggle then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, 
                                      startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- √ñffnungs-Animation
mainFrame.Size = UDim2.new(0, 0, 0, 0)
mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)

TweenService:Create(mainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), 
    {Size = UDim2.new(0, 450, 0, 550), Position = UDim2.new(0.5, -225, 0.5, -275)}):Play()

-- Automatisch laden beim Start
wait(1)
loadServerTools()

print("Client Tool Giver GUI geladen!")
