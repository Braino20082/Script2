-- ServerScriptService/ToolSystem.lua
-- Ein Single-Script Tool-System für Roblox
-- Lege deine Tool-Instanzen in ServerStorage/Tools
-- Script läuft automatisch beim Spielstart

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local ServerStorage = game:GetService("ServerStorage")
local Players = game:GetService("Players")

-- Tools-Ordner prüfen oder erstellen
local toolsFolder = ServerStorage:FindFirstChild("Tools")
if not toolsFolder then
    toolsFolder = Instance.new("Folder")
    toolsFolder.Name = "Tools"
    toolsFolder.Parent = ServerStorage
    warn("ServerStorage/Tools wurde erstellt. Lege dort deine Tool-Instanzen ab.")
end

-- RemoteEvents erstellen oder holen
local function getRemote(name)
    local remote = ReplicatedStorage:FindFirstChild(name)
    if not remote then
        remote = Instance.new("RemoteEvent")
        remote.Name = name
        remote.Parent = ReplicatedStorage
    end
    return remote
end

local ToolRequest = getRemote("ToolRequest")
local AvailableTools = getRemote("AvailableTools")

-- Tool-Namen abrufen
local function getToolNames()
    local names = {}
    for _, t in ipairs(toolsFolder:GetChildren()) do
        if t:IsA("Tool") then
            table.insert(names, t.Name)
        end
    end
    return names
end

-- Tool an Spieler geben
local function giveTool(player, toolName)
    if not player or not toolName then return end
    local tool = toolsFolder:FindFirstChild(toolName)
    if not tool then return end
    local backpack = player:FindFirstChildOfClass("Backpack")
    if not backpack then return end
    -- Entferne alte Kopie
    local existing = backpack:FindFirstChild(toolName)
    if existing then existing:Destroy() end
    local clone = tool:Clone()
    clone.Parent = backpack
end

-- Client-Anfragen verarbeiten
ToolRequest.OnServerEvent:Connect(function(player, params)
    if type(params) ~= "table" then return end
    if params.action == "single" and params.toolName then
        giveTool(player, params.toolName)
    elseif params.action == "all" then
        for _, name in ipairs(getToolNames()) do
            giveTool(player, name)
        end
    end
end)

-- Broadcast Tool-Liste an Spieler
local function sendToolList(player)
    AvailableTools:FireClient(player, getToolNames())
end

-- Wenn Tools hinzugefügt/entfernt werden
toolsFolder.ChildAdded:Connect(function() 
    for _, p in pairs(Players:GetPlayers()) do sendToolList(p) end
end)
toolsFolder.ChildRemoved:Connect(function() 
    for _, p in pairs(Players:GetPlayers()) do sendToolList(p) end
end)

-- LocalScript Source (GUI)
local localScriptSource = [[
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = game.Players.LocalPlayer
local ToolRequest = ReplicatedStorage:WaitForChild("ToolRequest")
local AvailableTools = ReplicatedStorage:WaitForChild("AvailableTools")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ToolGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 300, 0, 220)
frame.Position = UDim2.new(0, 10, 0, 60)
frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
frame.BackgroundTransparency = 0.15
frame.BorderSizePixel = 0
frame.Parent = screenGui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1,0,0,30)
title.Position = UDim2.new(0,0,0,0)
title.BackgroundTransparency = 1
title.Text = "Tools"
title.TextColor3 = Color3.new(1,1,1)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 20
title.Parent = frame

local list = Instance.new("ScrollingFrame")
list.Size = UDim2.new(1,-10,1,-90)
list.Position = UDim2.new(0,5,0,35)
list.BackgroundTransparency = 0.8
list.BorderSizePixel = 0
list.ScrollBarThickness = 6
list.Parent = frame

local uiList = Instance.new("UIListLayout")
uiList.Parent = list
uiList.Padding = UDim.new(0,6)

local btnAll = Instance.new("TextButton")
btnAll.Size = UDim2.new(1,-10,0,30)
btnAll.Position = UDim2.new(0,5,1,-45)
btnAll.Text = "Alle Tools holen"
btnAll.Font = Enum.Font.SourceSansBold
btnAll.TextSize = 18
btnAll.Parent = frame

btnAll.MouseButton1Click:Connect(function()
    ToolRequest:FireServer({action="all"})
end)

local function refresh(tools)
    for _, c in ipairs(list:GetChildren()) do
        if not c:IsA("UIListLayout") then c:Destroy() end
    end
    for i,name in ipairs(tools) do
        local btn = Instance.new("TextButton")
        btn.Size = UDim2.new(1,-10,0,30)
        btn.Position = UDim2.new(0,0,0,0)
        btn.Text = "Hole: "..name
        btn.Font = Enum.Font.SourceSans
        btn.TextSize = 16
        btn.LayoutOrder = i
        btn.Parent = list
        btn.MouseButton1Click:Connect(function()
            ToolRequest:FireServer({action="single",toolName=name})
        end)
    end
end

AvailableTools.OnClientEvent:Connect(refresh)
]]

-- LocalScript in PlayerGui einfügen
local function deployLocalScript(player)
    local pg = player:WaitForChild("PlayerGui")
    if pg:FindFirstChild("ToolGUI") then pg.ToolGUI:Destroy() end
    local ls = Instance.new("LocalScript")
    ls.Name = "ToolClient"
    ls.Source = localScriptSource
    ls.Parent = pg
end

-- Spieler joinet
Players.PlayerAdded:Connect(function(player)
    deployLocalScript(player)
    sendToolList(player)
end)

-- Bereits anwesende Spieler
for _, p in pairs(Players:GetPlayers()) do
    deployLocalScript(p)
    sendToolList(p)
end

print("ToolSystem läuft und ist bereit!")
